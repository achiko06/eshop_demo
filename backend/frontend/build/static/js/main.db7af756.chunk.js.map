{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.js","components/SearchBox.js","actions/userActions.js","components/Header1.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header1","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","varian","classsName","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.db7af756.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer, \r\n} from './reducers/userReducers'\r\n\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer, \r\n} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    \r\n    cart: cartReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null    \r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}      \r\n\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n } from '../constants/productConstants'\r\n\r\n\r\n export const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload }\r\n            \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload }\r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n } from '../constants/cartConstants'\r\n\r\n\r\n export const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }    \r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }     \r\n           \r\n\r\n        default:\r\n            return state     \r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n } from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload }\r\n            \r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload }\r\n            \r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload }\r\n            \r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user: {} }    \r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload }\r\n            \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users:[] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload }\r\n            \r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n            \r\n        default:\r\n            return state     \r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }    \r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}    \r\n        \r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }    \r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Ravenholm</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n } from '../constants/userConstants'\r\n\r\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\n export const login = (email, password) => async (dispatch) => {\r\n     try{\r\n         dispatch({\r\n             type: USER_LOGIN_REQUEST\r\n         })\r\n\r\n         const config = {\r\n             headers:{\r\n                 'Content-type':'application/json'\r\n             }\r\n         }\r\n\r\n         const {data} = await axios.post(\r\n             '/api/users/login/',\r\n             { 'username':email, 'password':password },\r\n             config\r\n             )\r\n\r\n         dispatch({\r\n             type:USER_LOGIN_SUCCESS,\r\n             payload:data\r\n         })\r\n         \r\n         localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n     }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n     }\r\n }\r\n\r\n\r\n export const logout = () => (dispatch) => {\r\n     localStorage.removeItem('userInfo')\r\n     dispatch( {type: USER_LOGOUT} )\r\n     dispatch( {type: USER_DETAILS_RESET} )\r\n     dispatch( {type: ORDER_LIST_MY_RESET} )\r\n     dispatch( {type: USER_LIST_RESET} )\r\n }\r\n\r\n\r\n export const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_REGISTER_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_DETAILS_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_UPDATE_PROFILE_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_LIST_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header1() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Ravenholm store</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        \r\n                        <Nav className=\"ml-auto\">\r\n\r\n                        <LinkContainer to='/cart'>    \r\n                            <Nav.Link><i className=\"fa fa-shopping-cart\"></i></Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                            </NavDropdown>\r\n                        ) : (\r\n                                <LinkContainer to='/login'>\r\n                                <Nav.Link><i className=\"fa fa-user\"></i></Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        \r\n                        \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header1\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product( {product} ) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>\r\n                            {product.name}\r\n                        </strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={` ${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n } from '../constants/productConstants'\r\n\r\n export const listProducts = (keyword = '') => async (dispatch) => {\r\n     try {\r\n         dispatch({type: PRODUCT_LIST_REQUEST })\r\n         \r\n         const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n         dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n         })\r\n\r\n     }catch (error) {\r\n         dispatch({\r\n             type: PRODUCT_LIST_FAIL,\r\n             payload: error.response && error.response.data.detail\r\n             ? error.response.data.detail\r\n             : error.message,\r\n         })\r\n     }\r\n }\r\n\r\n\r\n export const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n export const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST })\r\n        \r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n           type: PRODUCT_DETAILS_SUCCESS,\r\n           payload: data\r\n        })\r\n\r\n    }catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen( {history} ) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>By: {review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>Created at: {review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD,\r\n } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n     const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n     dispatch({\r\n         type: CART_ADD_ITEM,\r\n         payload:{\r\n             product: data._id,\r\n             name: data.name,\r\n             image: data.image,\r\n             price: data.price,\r\n             countInStock: data.countInStock,\r\n             qty\r\n         }\r\n     })\r\n\r\n     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n} \r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    \r\n    useEffect(() =>{\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        $ {item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0 )}) items</h2>\r\n                            $ {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' varian='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row classsName='py-3'>\r\n                <Col>\r\n                New Customer? <Link\r\n                 to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                     Register\r\n                     </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' varian='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row classsName='py-3'>\r\n                <Col>\r\n                Have an Account? <Link\r\n                 to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                     Sign In\r\n                     </Link>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id ) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n            setMessage('')\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' varian='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n                </Col>\r\n\r\n                <Col md={9}>\r\n                    <h2>My Orders</h2>\r\n                    {loadingOrders ? (\r\n                        <Loader/>\r\n                    ) : errorOrders ? (\r\n                        <Message variant='danger'>{errorOrders}</Message>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>$ {order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                    <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Post Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Post Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type='radio'\r\n                            label='Paypal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                            \r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.21) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n \r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVRjTpqpXi7-0902dl4vaRgYHJsjL2wAz8wBpJGIaiSSgv_VyC3phgPH1gZJwNF8Tyb7IQBWnN5PxKbe'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        \r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt.substring(0,10)}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt.substring(0,10)}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order doesn't exist\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>$ {order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>$ {order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>$ {order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>$ {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>$ {product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>$ {order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Footer from './components/Footer';\nimport Header1 from './components/Header1';\n\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n       <Header1 />\n       <main className=\"py-3\">\n         <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n         </Container>\n       </main>\n       <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}